
OIDCProviderMetadataURL ${METADATA}
OIDCSSLValidateServer Off
OIDCClientID ${CLIENTID}
OIDCClientSecret ${CLIENTSECRET}
OIDCCryptoPassphrase ${CRYPTOPHRASE}
OIDCOAuthAcceptTokenAs header
OIDCResponseType "token id_token"
OIDCScope "openid email profile"
OIDCRedirectURI ${REDIRECTURI}

OIDCOAuthIntrospectionEndpoint ${INTROSPECTION}
OIDCOAuthIntrospectionTokenParamName access_token
OIDCOAuthRemoteUserClaim user_id

OIDCSessionType client-cookie

OIDCInfoHook userinfo access_token refresh_token access_token_expires refresh_token session

Listen 443 https

SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
SSLSessionCacheTimeout  300

SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512

SSLCryptoDevice builtin

DocumentRoot "/var/www/html"

ServerName localhost
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined

<VirtualHost _default_:80>

	# Errors go to their own log
	ErrorLog /dev/stderr

	# Access log
	CustomLog /dev/stdout combined


    RewriteEngine On
    RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L]

</VirtualHost>

<VirtualHost _default_:443>

	LogLevel debug
	# Use separate log files for the SSL virtual host; note that LogLevel
	# is not inherited from httpd.conf.
	ErrorLog logs/ssl_error_log
	CustomLog logs/ssl_access_log combined

	#   SSL Engine Switch:
	#   Enable/Disable SSL for this virtual host.
	SSLEngine on

	#   SSL Protocol support:
	# List the enable protocol levels with which clients will be able to
	# connect.  Disable SSLv2 access by default:
	SSLProtocol all -SSLv2

	SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA


	SSLCertificateFile /etc/pki/tls/certs/localhost.crt
	SSLCertificateKeyFile /etc/pki/tls/private/localhost.key

	#SSLCertificateChainFile /etc/pki/tls/certs/server-chain.crt
	#SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt

	SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire


    <Location "/">
            AuthType auth-openidc
            Require claim aud:${CLIENTID}
            Require claim audience:${CLIENTID}
    </Location>


	ProxyPass /geoserver http://geoserver-ec:8080/geoserver
   	ProxyPassReverse /geoserver http://geoserver-ec:8080/geoserver

</VirtualHost>

